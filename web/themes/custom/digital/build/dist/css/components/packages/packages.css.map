{"version":3,"sources":["components/packages/packages.scss","mixins-functions/_mixins-sass-mq.scss","global/buttons-links.scss","mixins-functions/_mixins.scss","_settings.scss","components/packages/packages.css"],"names":[],"mappings":"AAAA;;EAAA;ACIA,sBAAA;AAmSA,qBAAA;AAnSA,sBAAA;AAmSA,qBAAA;AClSA;;;;EC+CE,oCAAA;EAAA,+BAAA;EAAA,4BAAA;ED1CA,iBAAA;EACA,gBAAA;EACA,qBAAA;EACA,kBAAA;EACA,WERM;EFSN,oCAAA;EACA,0BAAA;EACA,mCAAA;EAAqC,mBAAA;EACrC,iDAAA;EAAA,yCAAA;EACA,0BAAA;EACA,kBAAA;EACA,eAAA;EAEA,yBAAA;EACA,sBAAA;EACA,qBAAA;EACA,iBAAA;EACA,qBAAA;EACA,wBAAA;EACA,oBAAA;EACA,qBAAA;EACA,gBAAA;EACA,gBAAA;EACA,2BAAA;EAAA,2BAAA;EAAA,oBAAA;EACA,yBAAA;EAAA,sBAAA;EAAA,mBAAA;EACA,kBAAA;EACA,0CAAA;AGGF;AHDE;;;;;;;;;;EACE,qBAAA;EACA,WElCI;EFmCJ,oCAAA;EACA,kDAAA;EAAA,0CAAA;AGYJ;AHTE;;;;EACE,iBAAA;EACA,eAAA;AGcJ;AHXE;;;;EACE,yBEvCc;EFwCd,WE9CI;EF+CJ,yBAAA;AGgBJ;AHdI;;;;;;;;;;EACE,qBAAA;EACA,yBAAA;EACA,WEpDE;EFqDF,yBEpDU;AC6EhB;AHrBE;;;;EACE,sBE1DI;EF2DJ,cE1DY;EF2DZ,yBAAA;AG0BJ;AHxBI;;;;;;;;;;EACE,qBAAA;EACA,yBAAA;EACA,WEjEE;EFkEF,yBEjEU;ACoGhB;AHjCM;;;;;;;;;;EACE,UErEA;ACiHR;;AHtCA;EACE,kCAAA;EAAA,6BAAA;EAAA,0BAAA;AGyCF;AJmDE;EC7FF;IAII,yBAAA;IACA,qBAAA;IACA,yBAAA;IACA,sBAAA;EG0CF;AACF;;AJ/HA,sBAAA;AAmSA,qBAAA;AD/RA;EACE,yBAAA;EACA,oBAAA;AKgIF;AL9HE;EACE,iBAAA;EACA,mBAAA;EACA,oBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,SAAA;EACA,WIXI;AC2IR;AL9HI;EAPF;IAQI,4BAAA;IAAA,6BAAA;IAAA,0BAAA;IAAA,sBAAA;EKiIJ;AACF;AL/HM;EACE,gBAAA;EACA,aAAA;EACA,oBAAA;EAAA,iBAAA;AKiIR;AL/HQ;EALF;IAMA,eAAA;EKkIJ;AACF;ALhIQ;EACE,0BAAA;EAAA,sBAAA;AKkIV;AL7HI;EACE,2BAAA;EAAA,0BAAA;EACA,8BAAA;AK+HN;AL7HM;EACE,0BAAA;EAAA,sBAAA;EACA,oBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,yBAAA;EAAA,sBAAA;EAAA,mBAAA;EACA,SAAA;AK+HR;AL5HU;EACE,2BAAA;EAAA,2BAAA;EAAA,oBAAA;EACA,wBAAA;EAAA,qBAAA;EAAA,uBAAA;EACA,yBAAA;EAAA,sBAAA;EAAA,mBAAA;EACA,eAAA;EACA,gBAAA;EACA,sBAAA;EACA,mBAAA;EACA,eAAA;AK8HZ;AL3HU;EACE,iBAAA;EACA,gBAAA;EACA,gBAAA;EACA,4BAAA;EAAA,wBAAA;AK6HZ;AL1HU;EACE,kBAAA;EACA,gBAAA;EACA,gBAAA;AK4HZ;ALrHM;EACE,2BAAA;EAAA,wBAAA;EACA,iBAAA;EACA,gBAAA;EACA,gBAAA;AKuHR;ALrHQ;EACE,4BAAA;EAAA,2BAAA;AKuHV;ALlHI;EACE,kBAAA;EACA,gBAAA;EACA,gBAAA;EACA,4BAAA;EAAA,wBAAA;AKoHN;ALlHI;EACE,iBAAA;EACA,gBAAA;EACA,gBAAA;EACA,0BAAA;EAAA,sBAAA;AKoHN;ALlHI;EACE,kBAAA;EACA,gBAAA;EACA,gBAAA;AKoHN","file":"packages.css","sourcesContent":["/**\n * Featured Article component styling.\n */\n@use \"./node_modules/sass-rem\" as rem;\n@import \"../../global-includes\";\n@import \"../../global/buttons-links\";\n@import \"../../mixins-functions/mixins-sass-mq\";\n\n.packages_wrapper {\n  background-color: #012e4d;\n  padding-block: 120px;\n\n  .packages {\n    max-width: 1280px;\n    margin-inline: auto;\n    display: flex;\n    gap: 50px;\n    color: $white;\n\n    @media (max-width: 768px) {\n      flex-direction: column;\n    }\n    .images-container {\n      img {\n        max-width: 600px;\n        height: 302px;\n        object-fit: cover;\n\n        @media (max-width: 768px) {\n      max-width: 100%;\n    }\n\n        &:first-child {\n          margin-block-end: 32px;\n        }\n      }\n    }\n\n    &-type__wrapper {\n      padding-inline-start: 32px;\n      border-left: 4px solid #0097ff;\n\n      .paragraph--type--package-type {\n        margin-block-end: 1rem;\n        display: flex;\n        align-items: center;\n        gap: 16px;\n\n        .package_type {\n          &_index {\n            display: inline-flex;\n            justify-content: center;\n            align-items: center;\n            min-width: 70px;\n            min-height: 70px;\n            border: 4px solid $white;\n            border-radius: 100%;\n            font-size: 38px;\n          }\n\n          &_title {\n            font-size: 1.8rem;\n            line-height: 1.2;\n            font-weight: 600;\n            margin-block-end: 0.3rem;\n          }\n\n          &_short_desc {\n            font-size: 1.25rem;\n            line-height: 1.4;\n            font-weight: 400;\n          }\n        }\n      }\n    }\n\n    &__header {\n      .btn.btn--primary {\n        margin-block-start: 16px;\n        font-size: 1.5rem;\n        line-height: 1.4;\n        font-weight: 400;\n\n        svg {\n          margin-inline-start: 0.4rem;\n        }\n      }\n    }\n\n    &__title {\n      font-size: 2.25rem;\n      line-height: 1.2;\n      font-weight: 600;\n      margin-block-end: 0.5rem;\n    }\n    &__subtitle {\n      font-size: 1.5rem;\n      line-height: 1.2;\n      font-weight: 400;\n      margin-block-end: 2rem;\n    }\n    &__description {\n      font-size: 1.25rem;\n      line-height: 1.2;\n      font-weight: 400;\n    }\n  }\n}\n","@use \"sass:math\";\n@use \"sass:map\";\n@use \"sass:list\";\n\n/* stylelint-disable */\n\n/// Breakpoint list\n///\n/// Name your breakpoints in a way that creates a ubiquitous language\n/// across team members. It will improve communication between\n/// stakeholders, designers, developers, and testers.\n///\n/// @type Map\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint Full documentation and examples\n$breakpoints: (\n  mobile: 320px,\n  tablet: 740px,\n  desktop: 980px,\n  wide: 1300px\n) !default;\n\n/// Show breakpoints in the top right corner\n///\n/// If you want to display the currently active breakpoint in the top\n/// right corner of your site during development, add the breakpoints\n/// to this list, ordered by width. For example: (mobile, tablet, desktop).\n///\n/// @example scss\n///   $show-breakpoints: (mobile, tablet, desktop);\n///   @import 'path/to/mq';\n///\n/// @type map\n$show-breakpoints: () !default;\n\n/// Customize the media type (for example: `@media screen` or `@media print`)\n/// By default sass-mq uses an \"all\" media type (`@media all and …`)\n///\n/// @type String\n/// @link https://github.com/sass-mq/sass-mq#changing-media-type Full documentation and example\n$media-type: all !default;\n\n/// Convert pixels to ems\n///\n/// @param {Number} $px - value to convert\n///\n/// @example scss\n///  $font-size-in-ems: px2em(16px);\n///  p { font-size: px2em(16px); }\n///\n/// @returns {Number}\n\n@function px2em($px) {\n  @if math.is-unitless($px) {\n    @warn \"Assuming #{$px} to be in pixels, attempting to convert it into pixels.\";\n    @return px2em($px * 1px);\n  }\n  // if $px is compatible with em units then return value unchanged\n  @if math.compatible($px, 1em) {\n    @return $px;\n  }\n  @return math.div($px, 16px) * 1em;\n}\n\n/// Get a breakpoint's width\n///\n/// @param {String} $name - Name of the breakpoint. One of $breakpoints\n///\n/// @example scss\n///  $tablet-width: get-breakpoint-width(tablet);\n///  @media (min-width: get-breakpoint-width(desktop)) {}\n///\n/// @requires {Variable} $breakpoints\n///\n/// @returns {Number} Value in pixels\n@function get-breakpoint-width($name, $breakpoints: $breakpoints) {\n  @if map.has-key($breakpoints, $name) {\n    @return map.get($breakpoints, $name);\n  } @else {\n    @warn \"Breakpoint #{$name} wasn't found in $breakpoints.\";\n    @return null;\n  }\n\n}\n\n/// Media Query mixin\n///\n/// @param {String | Boolean} $from [false] - One of $breakpoints\n/// @param {String | Boolean} $until [false] - One of $breakpoints\n/// @param {String | Boolean} $and [false] - Additional media query parameters\n/// @param {String} $media-type [$media-type] - Media type: screen, print…\n///\n/// @ignore Undocumented API, for advanced use only:\n/// @ignore @param {Map} $breakpoints [$breakpoints]\n///\n/// @content styling rules, wrapped into a @media query when $responsive is true\n///\n/// @requires {Variable} $media-type\n/// @requires {Variable} $breakpoints\n/// @requires {function} px2em\n/// @requires {function} get-breakpoint-width\n///\n/// @link https://github.com/sass-mq/sass-mq#responsive-mode-on-default Full documentation and examples\n///\n/// @example scss\n///  .element {\n///    @include mq($from: mobile) {\n///      color: red;\n///    }\n///    @include mq($until: tablet) {\n///      color: blue;\n///    }\n///    @include mq(mobile, tablet) {\n///      color: green;\n///    }\n///    @include mq($from: tablet, $and: '(orientation: landscape)') {\n///      color: teal;\n///    }\n///    @include mq(950px) {\n///      color: hotpink;\n///    }\n///    @include mq(tablet, $media-type: screen) {\n///      color: hotpink;\n///    }\n///    // Advanced use:\n///    $my-breakpoints: (L: 900px, XL: 1200px);\n///    @include mq(L, $breakpoints: $my-breakpoints) {\n///      color: hotpink;\n///    }\n///  }\n@mixin mq(\n  $from: false,\n  $until: false,\n  $and: false,\n  $media-type: $media-type,\n  $breakpoints: $breakpoints,\n) {\n  $min-width: 0;\n  $max-width: 0;\n  $media-query: '';\n\n  // From: this breakpoint (inclusive)\n  @if $from {\n    @if type-of($from) == number {\n      $min-width: px2em($from);\n    } @else {\n      $min-width: px2em(get-breakpoint-width($from, $breakpoints));\n    }\n  }\n\n  // Until: that breakpoint (exclusive)\n  @if $until {\n    @if type-of($until) == number {\n      $max-width: px2em($until);\n    } @else {\n      $max-width: px2em(get-breakpoint-width($until, $breakpoints)) - .01em;\n    }\n  }\n\n  @if $min-width != 0 {\n    $media-query: '#{$media-query} and (min-width: #{$min-width})';\n  }\n  @if $max-width != 0 {\n    $media-query: '#{$media-query} and (max-width: #{$max-width})';\n  }\n  @if $and {\n    $media-query: '#{$media-query} and #{$and}';\n  }\n\n  // Remove unnecessary media query prefix 'all and '\n  @if ($media-type == 'all' and $media-query != '') {\n    $media-type: '';\n    $media-query: str-slice(unquote($media-query), 6);\n  }\n\n  @media #{$media-type + $media-query} {\n    @content;\n  }\n\n}\n\n/// Quick sort\n///\n/// @author Sam Richards\n/// @access private\n/// @param {List} $list - List to sort\n/// @returns {List} Sorted List\n@function _quick-sort($list) {\n  $less: ();\n  $equal: ();\n  $large: ();\n\n  @if length($list) > 1 {\n    $seed: list.nth($list, math.ceil(math.div(length($list), 2)));\n\n    @each $item in $list {\n      @if ($item == $seed) {\n        $equal: list.append($equal, $item);\n      } @else if ($item < $seed) {\n        $less: list.append($less, $item);\n      } @else if ($item > $seed) {\n        $large: list.append($large, $item);\n      }\n    }\n\n    @return join(join(_quick-sort($less), $equal), _quick-sort($large));\n  }\n\n  @return $list;\n}\n\n/// Sort a map by values (works with numbers only)\n///\n/// @access private\n/// @param {Map} $map - Map to sort\n/// @returns {Map} Map sorted by value\n@function _map-sort-by-value($map) {\n  $map-sorted: ();\n  $map-keys: map.keys($map);\n  $map-values: map.values($map);\n  $map-values-sorted: _quick-sort($map-values);\n\n  // Reorder key/value pairs based on key values\n  @each $value in $map-values-sorted {\n    $index: index($map-values, $value);\n    $key: list.nth($map-keys, $index);\n    $map-sorted: map.merge($map-sorted, ($key: $value));\n\n    // Unset the value in $map-values to prevent the loop\n    // from finding the same index twice\n    $map-values: list.set-nth($map-values, $index, 0);\n  }\n\n  @return $map-sorted;\n}\n\n/// Add a breakpoint\n///\n/// @param {String} $name - Name of the breakpoint\n/// @param {Number} $width - Width of the breakpoint\n///\n/// @requires {Variable} $breakpoints\n///\n/// @example scss\n///  @include add-breakpoint(tvscreen, 1920px);\n///  @include mq(tvscreen) {}\n@mixin add-breakpoint($name, $width) {\n  $new-breakpoint: ($name: $width);\n  $breakpoints: map.merge($breakpoints, $new-breakpoint) !global;\n  $breakpoints: _map-sort-by-value($breakpoints) !global;\n}\n\n/// Show the active breakpoint in the top right corner of the viewport\n/// @link https://github.com/sass-mq/sass-mq#seeing-the-currently-active-breakpoint\n///\n/// @param {List} $show-breakpoints [$show-breakpoints] - List of breakpoints to show in the top right corner\n/// @param {Map} $breakpoints [$breakpoints] - Breakpoint names and sizes\n///\n/// @requires {Variable} $breakpoints\n/// @requires {Variable} $show-breakpoints\n///\n/// @example scss\n///  // Show breakpoints using global settings\n///  @include show-breakpoints;\n///\n///  // Show breakpoints using custom settings\n///  @include show-breakpoints((L, XL), (S: 300px, L: 800px, XL: 1200px));\n@mixin show-breakpoints($show-breakpoints: $show-breakpoints, $breakpoints: $breakpoints) {\n  body:before {\n    background-color: #FCF8E3;\n    border-bottom: 1px solid #FBEED5;\n    border-left: 1px solid #FBEED5;\n    color: #C09853;\n    font: small-caption;\n    padding: 3px 6px;\n    pointer-events: none;\n    position: fixed;\n    right: 0;\n    top: 0;\n    z-index: 100;\n\n    // Loop through the breakpoints that should be shown\n    @each $show-breakpoint in $show-breakpoints {\n      $width: get-breakpoint-width($show-breakpoint, $breakpoints);\n      @include mq($show-breakpoint, $breakpoints: $breakpoints) {\n        content: \"#{$show-breakpoint} ≥ #{$width} (#{px2em($width)})\";\n      }\n    }\n\n  }\n}\n\n@if list.length($show-breakpoints) > 0 {\n  @include show-breakpoints;\n}\n\n/* stylelint-enable */\n","@use './node_modules/sass-rem' as rem;\n@import \"../global-includes\";\n\n// ******** Buttons ************\n// Default button ().\na.btn,\n.btn,\ninput[type=\"file\"],\ninput[type=\"submit\"] {\n  @include link-effect();\n  font-size: rem.convert(24px);\n  font-weight: 400;\n  display: inline-block;\n  padding: 12px 32px;\n  color: $white;\n  background: rgba(255, 255, 255, 0.2);\n  backdrop-filter: blur(2px);\n  -webkit-backdrop-filter: blur(10px); /* Safari support */\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n  text-transform: capitalize;\n  text-align: center;\n  cursor: pointer;\n  // Resets for various devices.\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  text-decoration: none;\n  -webkit-appearance: none;\n  -ms-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  overflow: hidden;\n  display: inline-flex;\n  align-items: center;\n  border-radius: 8px;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n\n  #{$a-tags-hover} {\n    text-decoration: none;\n    color: $white;\n    background: rgba(255, 255, 255, 0.3);\n    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);\n  }\n\n  &.btn-small {\n    padding: 6px 14px;\n    font-size: rem.convert(16px);\n  }\n\n  &.btn-secondary {\n    background-color: $secondary-color;\n    color: $white;\n    border: 2px solid $secondary-color;\n\n    #{$a-tags-hover} {\n      text-decoration: none;\n      border: 2px solid $primary-color;\n      color: $white;\n      background-color: $primary-color;\n    }\n  }\n\n  &.btn-tertiary {\n    background-color: $white;\n    color: $primary-color;\n    border: 2px solid $primary-color;\n\n    #{$a-tags-hover} {\n      text-decoration: none;\n      border: 2px solid $primary-color;\n      color: $white;\n      background-color: $primary-color;\n\n      svg {\n        fill: $white;\n      }\n    }\n  }\n}\n\na {\n  transition: all 0.15s ease;\n\n  @include mq($until: medium) {\n    overflow-wrap: break-word;\n    word-wrap: break-word;\n    -ms-word-break: break-all;\n    word-break: break-word;\n  }\n}\n","// Hide visually.\n@mixin visually-hidden() {\n  position: absolute !important;\n  clip: rect(1px, 1px, 1px, 1px);\n  overflow: hidden;\n  height: 1px;\n  width: 1px;\n  word-wrap: normal;\n}\n\n// Un-hide visually.\n@mixin unhide-visually() {\n  position: inherit !important;\n  clip: inherit !important;\n  overflow: inherit !important;\n  height: inherit !important;\n  width: inherit !important;\n  word-wrap: inherit !important;\n  min-width: inherit !important;\n  clip-path: inherit !important;\n}\n\n// List reset.\n@mixin ul-reset() {\n  list-style: none;\n  margin-left: 0;\n  padding-left: 0;\n}\n\n/// ie11 - A fallback for custom ie11 support.\n@mixin ie11 {\n  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\n    @content;\n  }\n}\n\n// Root modifier for sass.\n@mixin root-modifier($selector) {\n  @at-root #{$selector} #{&} {\n    @content;\n  }\n}\n\n// Basic fade in / out effect for drop downs, menus, expandables, etc...\n@mixin fade-effect() {\n  transition-property: opacity, visibility;\n  transition-duration: .6s;\n  transition-delay: 0.1s;\n}\n\n// Basic fade in with a link.\n@mixin link-effect() {\n  transition: all 0.6s ease 0s;\n}\n\n// No animation. Usage might include within the ie11() {} mixin.\n@mixin no-animation() {\n  animation-duration: 0.01ms !important;\n  animation-iteration-count: 1 !important;\n  transition-duration: 0.01ms !important;\n  transition-delay: 0.01ms, 0.01ms !important;\n}\n\n// Break out of the container.\n@mixin full-width() {\n  margin: 0 -50vw;\n  width: 100vw;\n  position: relative;\n  left: 50%;\n  right: 50%;\n  overflow: hidden;\n}\n\n@mixin container($max-width) {\n  max-width: $max-width;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n}\n\n@mixin blog-width() {\n  max-width: 70%;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n@mixin list-reset() {\n\n  .l-content & {\n    line-height: 1.2;\n    margin: 0;\n    padding: 0;\n  }\n}\n","$font-sans: sans-serif;\n\n\n$true-black: #000;\n$black: #212121;\n$medium-gray: #98928a;\n$white: #fff;\n$primary-color: #6466f1;\n$primary-color-100: #6366f1;\n$primary-color-50: #f4f6ff;\n$primary-color-00: #f3f6ff;\n$off-white-blue: #f5f5ff;\n$secondary-color: #22c55d;\n$light-periwinkle: #e3e5f1;\n\n// For usage with the container mixin.\n$small_desktop: 1024px;\n$desktop: 1280px;\n\n// Breakpoints.\n$breakpoints: (\n  small: 0,\n  mobile: 375px,\n  small_plus: 520px,\n  medium: 768px,\n  medium-large: 920px,\n  small_desktop: 1024px,\n  med_desktop: 1140px,\n  desktop: 1280px,\n  x_wide: 1440px,\n);\n\n// Uncomment to debug breakpoints.\n//$mq-show-breakpoints: (small, mobile, small_plus, medium, medium-large, small_desktop, desktop, x_wide);\n\n$a-tags-hover: '&:active, &:focus, &:hover ';\n","/**\n * Featured Article component styling.\n */\n/* stylelint-disable */\n/* stylelint-enable */\n/* stylelint-disable */\n/* stylelint-enable */\na.btn,\n.btn,\ninput[type=file],\ninput[type=submit] {\n  transition: all 0.6s ease 0s;\n  font-size: 1.5rem;\n  font-weight: 400;\n  display: inline-block;\n  padding: 12px 32px;\n  color: #fff;\n  background: rgba(255, 255, 255, 0.2);\n  backdrop-filter: blur(2px);\n  -webkit-backdrop-filter: blur(10px);\n  /* Safari support */\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n  text-transform: capitalize;\n  text-align: center;\n  cursor: pointer;\n  -webkit-user-select: none;\n  -moz-user-select: none;\n  -ms-user-select: none;\n  user-select: none;\n  text-decoration: none;\n  -webkit-appearance: none;\n  -ms-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  overflow: hidden;\n  display: inline-flex;\n  align-items: center;\n  border-radius: 8px;\n  border: 1px solid rgba(255, 255, 255, 0.3);\n}\na.btn:active, a.btn:focus, a.btn:hover,\n.btn:active,\n.btn:focus,\n.btn:hover,\ninput[type=file]:active,\ninput[type=file]:focus,\ninput[type=file]:hover,\ninput[type=submit]:active,\ninput[type=submit]:focus,\ninput[type=submit]:hover {\n  text-decoration: none;\n  color: #fff;\n  background: rgba(255, 255, 255, 0.3);\n  box-shadow: 0 6px 20px rgba(0, 0, 0, 0.15);\n}\na.btn.btn-small,\n.btn.btn-small,\ninput[type=file].btn-small,\ninput[type=submit].btn-small {\n  padding: 6px 14px;\n  font-size: 1rem;\n}\na.btn.btn-secondary,\n.btn.btn-secondary,\ninput[type=file].btn-secondary,\ninput[type=submit].btn-secondary {\n  background-color: #22c55d;\n  color: #fff;\n  border: 2px solid #22c55d;\n}\na.btn.btn-secondary:active, a.btn.btn-secondary:focus, a.btn.btn-secondary:hover,\n.btn.btn-secondary:active,\n.btn.btn-secondary:focus,\n.btn.btn-secondary:hover,\ninput[type=file].btn-secondary:active,\ninput[type=file].btn-secondary:focus,\ninput[type=file].btn-secondary:hover,\ninput[type=submit].btn-secondary:active,\ninput[type=submit].btn-secondary:focus,\ninput[type=submit].btn-secondary:hover {\n  text-decoration: none;\n  border: 2px solid #6466f1;\n  color: #fff;\n  background-color: #6466f1;\n}\na.btn.btn-tertiary,\n.btn.btn-tertiary,\ninput[type=file].btn-tertiary,\ninput[type=submit].btn-tertiary {\n  background-color: #fff;\n  color: #6466f1;\n  border: 2px solid #6466f1;\n}\na.btn.btn-tertiary:active, a.btn.btn-tertiary:focus, a.btn.btn-tertiary:hover,\n.btn.btn-tertiary:active,\n.btn.btn-tertiary:focus,\n.btn.btn-tertiary:hover,\ninput[type=file].btn-tertiary:active,\ninput[type=file].btn-tertiary:focus,\ninput[type=file].btn-tertiary:hover,\ninput[type=submit].btn-tertiary:active,\ninput[type=submit].btn-tertiary:focus,\ninput[type=submit].btn-tertiary:hover {\n  text-decoration: none;\n  border: 2px solid #6466f1;\n  color: #fff;\n  background-color: #6466f1;\n}\na.btn.btn-tertiary:active svg, a.btn.btn-tertiary:focus svg, a.btn.btn-tertiary:hover svg,\n.btn.btn-tertiary:active svg,\n.btn.btn-tertiary:focus svg,\n.btn.btn-tertiary:hover svg,\ninput[type=file].btn-tertiary:active svg,\ninput[type=file].btn-tertiary:focus svg,\ninput[type=file].btn-tertiary:hover svg,\ninput[type=submit].btn-tertiary:active svg,\ninput[type=submit].btn-tertiary:focus svg,\ninput[type=submit].btn-tertiary:hover svg {\n  fill: #fff;\n}\n\na {\n  transition: all 0.15s ease;\n}\n@media (max-width: 47.99em) {\n  a {\n    overflow-wrap: break-word;\n    word-wrap: break-word;\n    -ms-word-break: break-all;\n    word-break: break-word;\n  }\n}\n\n/* stylelint-disable */\n/* stylelint-enable */\n.packages_wrapper {\n  background-color: #012e4d;\n  padding-block: 120px;\n}\n.packages_wrapper .packages {\n  max-width: 1280px;\n  margin-inline: auto;\n  display: flex;\n  gap: 50px;\n  color: #fff;\n}\n@media (max-width: 768px) {\n  .packages_wrapper .packages {\n    flex-direction: column;\n  }\n}\n.packages_wrapper .packages .images-container img {\n  max-width: 600px;\n  height: 302px;\n  object-fit: cover;\n}\n@media (max-width: 768px) {\n  .packages_wrapper .packages .images-container img {\n    max-width: 100%;\n  }\n}\n.packages_wrapper .packages .images-container img:first-child {\n  margin-block-end: 32px;\n}\n.packages_wrapper .packages-type__wrapper {\n  padding-inline-start: 32px;\n  border-left: 4px solid #0097ff;\n}\n.packages_wrapper .packages-type__wrapper .paragraph--type--package-type {\n  margin-block-end: 1rem;\n  display: flex;\n  align-items: center;\n  gap: 16px;\n}\n.packages_wrapper .packages-type__wrapper .paragraph--type--package-type .package_type_index {\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 70px;\n  min-height: 70px;\n  border: 4px solid #fff;\n  border-radius: 100%;\n  font-size: 38px;\n}\n.packages_wrapper .packages-type__wrapper .paragraph--type--package-type .package_type_title {\n  font-size: 1.8rem;\n  line-height: 1.2;\n  font-weight: 600;\n  margin-block-end: 0.3rem;\n}\n.packages_wrapper .packages-type__wrapper .paragraph--type--package-type .package_type_short_desc {\n  font-size: 1.25rem;\n  line-height: 1.4;\n  font-weight: 400;\n}\n.packages_wrapper .packages__header .btn.btn--primary {\n  margin-block-start: 16px;\n  font-size: 1.5rem;\n  line-height: 1.4;\n  font-weight: 400;\n}\n.packages_wrapper .packages__header .btn.btn--primary svg {\n  margin-inline-start: 0.4rem;\n}\n.packages_wrapper .packages__title {\n  font-size: 2.25rem;\n  line-height: 1.2;\n  font-weight: 600;\n  margin-block-end: 0.5rem;\n}\n.packages_wrapper .packages__subtitle {\n  font-size: 1.5rem;\n  line-height: 1.2;\n  font-weight: 400;\n  margin-block-end: 2rem;\n}\n.packages_wrapper .packages__description {\n  font-size: 1.25rem;\n  line-height: 1.2;\n  font-weight: 400;\n}"]}